AWSTemplateFormatVersion: '2010-09-09'
Description: Create a Lambda Function Fronted by a Rest API Gateway for Automated Resume Project

Parameters:
  LambdaFunctionName:
    Type: String
    Description: Name of the Lambda function
    Default: readFromDynamoDBStreamsFunction

  AssetS3BucketName:
    Type: String
    Description: Name of the S3 bucket where code and PDFs are stored
    Default: my-automated-resume-bucket
  
  S3BucketNameTemplateURL:
    Type: String
    Description: URL of the S3 Bucket CloudFormation template
    Default: https://s3.amazonaws.com/msllc-cloudformation-templates/s3Buckets/step1-automatedResume-createS3Bucket.yaml

  LambdaS3Key:
    Type: String
    Description: S3 key for the Lambda function code
    Default: code/lambda.zip

  AppPassword:
    Type: String
    Description: SMTP password for sending emails
    Default: YourAppPassword

  Sender:
    Type: String
    Description: Json String of Sender Details '{name, email, phone, linkedInUrl, githubUrl}'
    Default: '{"name":"YourName","email":"YourEmail","phone":"YourPhone","linkedInUrl":"YourLinkedIn","githubUrl":"YourGitHub"}'

  PDFFileName:
    Type: String
    Description: Name of the PDF file to be processed
    Default: YourResume.pdf
  
  DynamoDBTableTemplateURL:
    Type: String
    Description: URL of the DynamoDB Table CloudFormation template
    Default: https://s3.amazonaws.com/msllc-cloudformation-templates/database/step2-automatedResume-createDynamoDBTable.yaml


Resources:

  S3BucketStack:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Ref S3BucketNameTemplateURL
  
  DynamoDBTableStack:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Ref DynamoDBTableTemplateURL

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    DependsOn: 
    - S3BucketStack
    - DynamoDBTableStack
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource:
                  - !Sub 
                   - 'arn:aws:s3:::${S3BucketOutputName}/*'
                   - S3BucketOutputName: !GetAtt S3BucketStack.Outputs.BucketName
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource: 
                  - !Sub 
                    - 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBTableOutputName}/stream/*'
                    - DynamoDBTableOutputName: !GetAtt DynamoDBTableStack.Outputs.DynamoDBTableName
              - Effect: Allow 
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              
  MyEventSourceMapping:
      Type: AWS::Lambda::EventSourceMapping
      DependsOn: 
      - LambdaFunction
      - DynamoDBTableStack
      Properties:
        BatchSize: 5
        EventSourceArn: !GetAtt DynamoDBTableStack.Outputs.DynamoDBStreamArn
        FunctionName: !Ref LambdaFunction
        StartingPosition: LATEST
        Enabled: true

  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    DependsOn: 
      - LambdaExecutionRole
      - S3BucketStack
      - DynamoDBTableStack
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Runtime: python3.11
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          BUCKET_NAME: !GetAtt S3BucketStack.Outputs.BucketName
          OBJECT_KEY: !Sub pdfs/${PDFFileName}
          APP_PASSWORD: !Ref AppPassword
          SENDER: !Ref Sender
      Code:
        S3Bucket: !Ref AssetS3BucketName
        S3Key: !Ref LambdaS3Key
      Timeout: 30
      MemorySize: 128
      Description: Lambda function for automated resume project

Outputs:
  LambdaFunctionArn:
    Description: ARN of the Lambda function
    Value: !GetAtt LambdaFunction.Arn